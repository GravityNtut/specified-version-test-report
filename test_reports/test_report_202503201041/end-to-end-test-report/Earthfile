VERSION 0.8
dep:
    FROM earthly/dind:alpine-3.18-docker-23.0.6-r4
    # install go 1.23.5 for go test in earthly/dind container
    RUN apk update && apk upgrade --available \
        && apk add --no-cache ca-certificates tzdata curl bash net-tools xmlstarlet \
        && wget https://golang.org/dl/go1.23.5.linux-amd64.tar.gz \
        && tar -C /usr/local -xzf go1.23.5.linux-amd64.tar.gz \
        && rm go1.23.5.linux-amd64.tar.gz \
        && apk add --update openssl # 用於atomic加密token
    ENV PATH=/usr/local/go/bin:$PATH
    
    WORKDIR /E2E_test
    COPY go.mod go.sum ./
    RUN go mod download
    COPY . .

ci:
    BUILD +docker-compose-single-point-of-failure
    BUILD +docker-compose-e2e-regression-test

clone-services-dep:
    FROM busybox
    GIT CLONE --branch main git@github.com:BrobridgeOrg/gravity-dispatcher.git /dispatcher
    GIT CLONE --branch main git@github.com:BrobridgeOrg/atomic.git /atomic
    GIT CLONE --branch main git@github.com:BrobridgeOrg/gravity-adapter-mssql.git /gravity-adapter-mssql
    GIT CLONE --branch main git@github.com:BrobridgeOrg/gravity-nats-server.git /gravity-nats-server
    SAVE ARTIFACT /dispatcher
    SAVE ARTIFACT /atomic
    SAVE ARTIFACT /gravity-adapter-mssql
    SAVE ARTIFACT /gravity-nats-server

build-nats-server-image:
    FROM DOCKERFILE -f +clone-services-dep/gravity-nats-server/build/docker/Dockerfile.alpine +clone-services-dep/gravity-nats-server/*
    SAVE IMAGE gravity-nats-server:latest

build-dispatcher-image:
    FROM DOCKERFILE -f +clone-services-dep/dispatcher/build/docker/Dockerfile +clone-services-dep/dispatcher/*
    SAVE IMAGE gravity-dispatcher:latest

build-atomic-image:
    FROM DOCKERFILE -f +clone-services-dep/atomic/build/docker/Dockerfile.ubi +clone-services-dep/atomic/*
    SAVE IMAGE gravity-atomic:latest

build-adapter-mssql-image:
    FROM DOCKERFILE -f +clone-services-dep/gravity-adapter-mssql/build/docker/Dockerfile +clone-services-dep/gravity-adapter-mssql/*
    SAVE IMAGE gravity-adapter-mssql:latest

build-dep-images:
    BUILD +build-nats-server-image
    BUILD +build-dispatcher-image
    BUILD +build-atomic-image
    BUILD +build-adapter-mssql-image

daily-test:
    FROM +dep
    WORKDIR /E2E_test
    RUN sed -i '/gravity-dispatcher:/,/image:/s|image: .*|image: "gravity-dispatcher:latest"|' ./regression_test/docker-compose.yaml
    RUN sed -i '/nats-jetstream:/,/image:/s|image: .*|image: "gravity-nats-server:latest"|' ./regression_test/docker-compose.yaml
    RUN sed -i '/atomic:/,/image:/s|image: .*|image: "gravity-atomic:latest"|' ./regression_test/docker-compose.yaml
    RUN sed -i '/gravity-adapter-mssql:/,/image:/s|image: .*|image: "gravity-adapter-mssql:latest"|' ./regression_test/docker-compose.yaml
    
    RUN sed -i '/gravity-dispatcher:/,/image:/s|image: .*|image: "gravity-dispatcher:latest"|' ./single_point_of_failure_test/docker-compose.yaml
    RUN sed -i '/nats-jetstream:/,/image:/s|image: .*|image: "gravity-nats-server:latest"|' ./single_point_of_failure_test/docker-compose.yaml
    RUN sed -i '/atomic:/,/image:/s|image: .*|image: "gravity-atomic:latest"|' ./single_point_of_failure_test/docker-compose.yaml
    RUN sed -i '/gravity-adapter-mssql:/,/image:/s|image: .*|image: "gravity-adapter-mssql:latest"|' ./single_point_of_failure_test/docker-compose.yaml
    DO github.com/earthly/lib+INSTALL_DIND
    WITH DOCKER \
        --pull mcr.microsoft.com/mssql/server:2019-latest \
        --pull mysql:8.0.33 \
        --load gravity-nats-server:latest=+build-nats-server-image \
        --load gravity-dispatcher:latest=+build-dispatcher-image \
        --load gravity-atomic:latest=+build-atomic-image \
        --load gravity-adapter-mssql:latest=+build-adapter-mssql-image 
        
        RUN --no-cache go test ./regression_test/... ./single_point_of_failure_test/... -p 1 -v --timeout=60m  -f junit:report.xml || true

        # 將xml轉換成md格式
    END
    RUN chmod +x ./script/report_xml_to_md.sh
    RUN ./script/report_xml_to_md.sh
    SAVE ARTIFACT ./test_report AS LOCAL .

# input args: nats_jetstream_version, gravity_dispatcher_version, atomic_version, gravity_adapter_mssql_version
specified-version-test:
    FROM +dep
    WORKDIR /E2E_test
    
    ARG nats_jetstream_version
    ARG gravity_dispatcher_version
    ARG atomic_version
    ARG gravity_adapter_mssql_version
    RUN sed -i '/nats-jetstream:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/nats-server:'$nats_jetstream_version'"|' ./regression_test/docker-compose.yaml
    RUN sed -i '/gravity-dispatcher:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/gravity-dispatcher:'$gravity_dispatcher_version'"|' ./regression_test/docker-compose.yaml
    RUN sed -i '/atomic:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/atomic:'$atomic_version'"|' ./regression_test/docker-compose.yaml
    RUN sed -i '/gravity-adapter-mssql:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/gravity-adapter-mssql:'$gravity_adapter_mssql_version'"|' ./regression_test/docker-compose.yaml

    RUN sed -i '/nats-jetstream:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/nats-server:'$nats_jetstream_version'"|' ./single_point_of_failure_test/docker-compose.yaml
    RUN sed -i '/gravity-dispatcher:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/gravity-dispatcher:'$gravity_dispatcher_version'"|' ./single_point_of_failure_test/docker-compose.yaml
    RUN sed -i '/atomic:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/atomic:'$atomic_version'"|' ./single_point_of_failure_test/docker-compose.yaml
    RUN sed -i '/gravity-adapter-mssql:/,/image:/s|image: .*|image: "ghcr.io/brobridgeorg/gravity-adapter-mssql:'$gravity_adapter_mssql_version'"|' ./single_point_of_failure_test/docker-compose.yaml

    DO github.com/earthly/lib+INSTALL_DIND
    WITH DOCKER \
        --pull mcr.microsoft.com/mssql/server:2019-latest \
        --pull mysql:8.0.33 \
        --pull ghcr.io/brobridgeorg/atomic:$atomic_version \
        --pull ghcr.io/brobridgeorg/gravity-adapter-mssql:$gravity_adapter_mssql_version

        RUN --no-cache go test ./regression_test/... ./single_point_of_failure_test/... -p 1 -v --timeout=60m  -f junit:report.xml || true
    END
    RUN chmod +x ./script/report_xml_to_md.sh
    RUN ./script/report_xml_to_md.sh
    SAVE ARTIFACT ./test_report AS LOCAL .
    